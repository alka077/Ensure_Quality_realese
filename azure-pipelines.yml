name: Azure Pipelines
variables:
  python.version: '3.7.6'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: myAgentPool
    steps:
    # Needed for Terraform VM deployment
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: 'AAAAB3NzaC1yc2EAAAADAQABAAABgQDg2t7porad9/8FDV87KVROQZwNoVQmqtm2019W4jOKpG7QuXYf8YZg2jYpVvFS9KwaVwEPeEhoix7P+e5AfgEdIocQgjXNwUzozIR+nrhCJKnOtbbtbXwsOYTYa9henk2frY0PGXFuHY7bGoKGzdyQbQ4uD+GdCHjKbk0brcy4JSV4yvnCSJi/OUm7nWpttapDpI+I7N46N0PObxwLz4vPrj9W+lgg68OOXu3L13YEynEVoeM+JkmxrakIDN2y5Ov2/tM2NS9jdY3nDumNfeFYIstJBj7WfDWDziDcDVLms0k20bQVSs2+1/56tmhL+CiIiuj5tiRKrqOssyINLEBH0XsrszN3QasPEBbTtmclaUwcaFfqGXrmS5Pa8BuAiipQZnm2/X/dPQH1i3yP+d9tjaVwfv0gmS3sBzdfcECu+dfQEvbLUi2Ye5OSldT6cDm2u5A3cI9Y3Qiz9nzqMguS+khq5SL6zPihkjmQXt/vPiPUO/vOBBupvxsRfHM4D9k= odl_user@cc-6976feac-7587574654-5zvqg'
        #sshPublicKey: 'ssh-rsa '
        sshKeySecureFile: 'id_rsa'
    
    - task: TerraformCLI@0
      inputs:
        command: 'validate'
        allowTelemetryCollection: true

    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'

    - task: TerraformCLI@1
      displayName: 'terraform init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: 'terraform'
        backendServiceArm: '09e822a9-d2e3-40f8-885b-ae82ab7bffdd'
        backendAzureRmResourceGroupName: 'Azuredevops'
        backendAzureRmStorageAccountName: 'storage93udacitydevops'
        backendAzureRmContainerName: 'mycontainer'
        backendAzureRmKey: 'tf/terraform.tfstate'

    - task: TerraformCLI@2
      displayName: 'terraform apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: 'terraform'
        environmentServiceNameAzureRm: '09e822a9-d2e3-40f8-885b-ae82ab7bffdd'


    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'path/to/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
- stage:
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: ''
              appName: ''
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


